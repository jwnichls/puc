package edu.cmu.hcii.puc.devices.UPnP;

import edu.cmu.hcii.puc.devices.DeviceException;

/**
 * Abstraction of a UPnPControl.  In theory, this could be implemented to
 * link to any UPnP controlling code, but this class is designed to link to
 * a native UPnP Control Point as generated by the Intel Authoring Tools
 * kit.  It handles maintainence of an event queue, as well as managing the
 * lifetime of the native control point.
 */

public abstract class UPnPControl
{

// Instance variables

  public EventQueue events;

// Constructor

  protected UPnPControl()
  {
    events = new EventQueue();
  }

  /********************** Event Methods ****************************/

  public final UPnPEvent getNextEvent() throws DeviceException
  {
    return events.getNext();
  }

  public final void addEvent(UPnPEvent evt)
  {
    if (evt == null) System.err.println("Ignoring attempt to add null event " +
                                        "to event queue");
    else
    {
      events.append(evt);
    }
  }


  public final void clearAllEvents()
  {
    events.clear();
  }

  /********************* Abstract Connection Methods *********************/

  public abstract void startCP() throws DeviceException;

  public abstract void stopCP() throws DeviceException;

}